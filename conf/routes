# This file is part of the flimey-core software.
# Copyright (C) 2020  Karl Kegel
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Routes

GET     /                                                   controllers.ApplicationController.index()
GET     /overview                                           controllers.ApplicationController.overview()

GET     /login                                              controllers.AuthController.getLoginPage()
POST    /login                                              controllers.AuthController.login()
POST    /login/delete                                       controllers.AuthController.logout()

GET     /auth                                               controllers.AuthController.getAuthenticatePage()
POST    /auth                                               controllers.AuthController.authenticate()

GET     /model                                              controllers.ModelAssetController.index(msg: Option[String] ?= None)

# new asset type
POST    /model/asset                                        controllers.ModelAssetController.addAssetType
# delete asset type
POST    /model/asset/delete/:id                             controllers.ModelAssetController.deleteAssetType(id: Long)

# search for and open asset type editor
# FIXME
POST    /model/asset/search                                 controllers.ModelAssetController.searchAssetType

# get asset type editor
GET     /model/asset/editor/:id                             controllers.ModelAssetController.getAssetTypeEditor(id: Long, msg: Option[String] ?= None, c: Option[String] ?= None, v1: Option[String] ?= None, v2: Option[String] ?= None)
# submit asset type edit form
POST    /model/asset/editor/asset/:id                       controllers.ModelAssetController.postAssetType(id: Long)

# new asset constraint
POST    /model/asset/editor/:id/constraint                  controllers.ModelAssetController.addAssetConstraint(id: Long)
# delete asset constraint
POST    /model/asset/editor/:id/constraint/:cid/delete      controllers.ModelAssetController.deleteAssetConstraint(id: Long, cid: Long)

# get the asset overview page
GET     /asset                                              controllers.AssetController.index(msg: Option[String] ?= None)
POST    /asset/type                                         controllers.AssetController.changeAssetType

GET     /asset/:assetTypeId                                 controllers.AssetController.getAssetsOfType(assetTypeId: Long, msg: Option[String] ?= None)

GET     /asset/:assetTypeId/new                             controllers.AssetController.getNewAssetEditor(assetTypeId: Long, msg: Option[String] ?= None)
POST    /asset/:assetTypeId/new                             controllers.AssetController.addNewAsset(assetTypeId: Long, msg: Option[String] ?= None)

GET     /asset/:assetTypeId/editor/:assetId                 controllers.AssetController.getAssetEditor(assetTypeId: Long, assetId: Long, msg: Option[String] ?= None)
POST    /asset/:assetTypeId/editor/:assetId                 controllers.AssetController.postAsset(assetTypeId: Long, assetId: Long, msg: Option[String] ?= None)

POST    /asset/:assetTypeId/editor/:assetId/delete          controllers.AssetController.deleteAsset(assetTypeId: Long, assetId: Long, msg: Option[String] ?= None)

# FIXME
POST    /asset/search                                       controllers.AssetController.searchAssets

# serve all files from the public folder
GET     /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)
